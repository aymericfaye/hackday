{"version":3,"sources":["webpack:///webpack/bootstrap 8de64a005324a4e6317c","webpack:///external \"express\"","webpack:///./main.ts","webpack:///./app/controller.ts","webpack:///./app/index.ts","webpack:///external \"path\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA,oC;;;;;;;;;ACAA,qCAAkC;AAClC,kCAA4B;AAE5B,mCAAqC;AAErC,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC;AAGhD,IAAM,GAAG,GAAwB,OAAO,EAAE;AAC1C,IAAM,IAAI,GAAW,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI;AAE7C,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC;AAC7B,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,WAAW,CAAC,CAAC;AACxD,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AACzD,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,mBAAa,CAAC,CAAC;AAE5B,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,aAAG;IAClB,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;IAClB,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,OAAO,CAAC,GAAG,CAAC,mCAAiC,IAAI,MAAG,CAAC,CAAC;IACxD,CAAC;AACH,CAAC,CAAC,CAAC;;;;;;;;;;;ACtBH,wCAAwC;AACxC,uCAAmD;AAEnD,iDAAiD;AACjD,IAAM,MAAM,GAAW,gBAAM,EAAE;AAE/B,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,GAAY,EAAE,GAAa;IAC1C,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;AACrB,CAAC,CAAC,CAAC;AAEU,qBAAa,GAAW,MAAM;;;;;;;;;;;;;ACV3C,iCAA4B;;;;;;;ACA5B,iC","file":"westage-hackday.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8de64a005324a4e6317c","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 0\n// module chunks = 0","import * as express from 'express'\nimport * as path from 'path'\n\nimport { AppController } from './app'\n\nconsole.log('WeStage Hackday with Zengularity!')\n\n\nconst app: express.Application = express()\nconst port: number = process.env.PORT || 3000\n\napp.set('view engine', 'ejs')\napp.set('views', path.join(path.resolve(), 'src/views'))\napp.use(express.static(path.join(__dirname + 'public')));\napp.use('/', AppController);\n\napp.listen(port, err => {\n  if (err) {\n    console.log(err)\n  } else {\n    console.log(`Listening at http://localhost:${port}/`);\n  }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./main.ts","// Import only what we need from express\nimport { Router, Request, Response } from 'express'\n\n// Assign router to the express.Router() instance\nconst router: Router = Router()\n\nrouter.get('/', (req: Request, res: Response) => {\n  res.render('index')\n});\n\nexport const AppController: Router = router\n\n\n\n// WEBPACK FOOTER //\n// ./app/controller.ts","export * from './controller'\n\n\n\n// WEBPACK FOOTER //\n// ./app/index.ts","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}